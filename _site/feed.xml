<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.4.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-02-15T10:17:56-05:00</updated><id>http://localhost:4000//</id><title type="html">Tyler Wood</title><subtitle>A game programmer soon to be graduating from Champlain College.</subtitle><author><name>Tyler Wood</name><email>me@tyskwo.com</email></author><entry><title type="html">Iteration.</title><link href="http://localhost:4000/2017/iteration/" rel="alternate" type="text/html" title="Iteration." /><published>2017-02-10T00:00:00-05:00</published><updated>2017-02-10T00:00:00-05:00</updated><id>http://localhost:4000/2017/iteration</id><content type="html" xml:base="http://localhost:4000/2017/iteration/">&lt;p&gt;It’s been a relatively slow week for &lt;em&gt;Office Mayhem&lt;/em&gt;, but &lt;em&gt;9:5 Games&lt;/em&gt; has still accomplished a lot this past week: the artists have been working on models, characters, and rigs, the designers have been producing new sound effects, building levels, and balancing systems, and the programmers have been finishing systems from last week. &lt;a href=&quot;http://tonyl.info&quot;&gt;Tony&lt;/a&gt; finished up the elevator from last week and implemented a revised dash system that uses a cool down to discourage players from constantly mashing the B-button as fast as humanly (or inhumanly) as possible. To combat this, the designers (and Tony) created a coffee pot item that allows players to move at their fastest speed for a little while after using it. It hasn’t gone through much testing, but it has already created a couple new strategies from what we’ve seen.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://andrewmillsapblog.wordpress.com&quot;&gt;Andy&lt;/a&gt; spent this week finishing up crunch time to make it more pressure-inducing for the players (and more obvious what’s going on!), and reworking the score card UI so players can more easily figure out who’s winning (and thus whose computer to break).&lt;/p&gt;

&lt;p&gt;I spent this week squashing the few bugs that have been popping up in QA, as well as lending a helping hand to Tony and Andy when they’ve needed it. I created a &lt;code class=&quot;highlighter-rouge&quot;&gt;DataHolder&lt;/code&gt; class that helps keep track of game data between rounds, which will be the start of our outer game loop framework, and I started the &lt;code class=&quot;highlighter-rouge&quot;&gt;Interruptable&lt;/code&gt; framework. For now, I’m going the fast and easy, if not sloppy, route to get it working and tested first before spending the time to refactor it into the current task system. I would rather not waste the time to implement it cleanly and have QA rip it out of the game.&lt;/p&gt;

&lt;p&gt;This coming week, I’m hoping to finish up interruptables, and I’m hoping Tony and Andy can clean up transitions between scenes, and start the accolade system. I feel like morale fell slightly this week (whether because of lack of visual progress, the plague that’s going around, or simply unenthused to tackle the problems at hand), so I’m hoping to give them (and the rest of the team) more freedom to decide what they want to work on.&lt;/p&gt;

&lt;p&gt;Expect gifs and code next week :)&lt;/p&gt;

&lt;p&gt;In other news, &lt;a href=&quot;https://gauzewave.wordpress.com&quot;&gt;David&lt;/a&gt; and I are creating a particle system container in Game Physics, and it’s shaping up quite nicely. Expect to see a blog post on it soon.&lt;/p&gt;</content><author><name>Tyler Wood</name><email>me@tyskwo.com</email></author><summary type="html">It’s been a relatively slow week for Office Mayhem, but 9:5 Games has still accomplished a lot this past week: the artists have been working on models, characters, and rigs, the designers have been producing new sound effects, building levels, and balancing systems, and the programmers have been finishing systems from last week. Tony finished up the elevator from last week and implemented a revised dash system that uses a cool down to discourage players from constantly mashing the B-button as fast as humanly (or inhumanly) as possible. To combat this, the designers (and Tony) created a coffee pot item that allows players to move at their fastest speed for a little while after using it. It hasn’t gone through much testing, but it has already created a couple new strategies from what we’ve seen.</summary></entry><entry><title type="html">Sometimes the best tutorial is no tutorial.</title><link href="http://localhost:4000/2017/sometimes-the-best-tutorial-is-no-tutorial/" rel="alternate" type="text/html" title="Sometimes the best tutorial is no tutorial." /><published>2017-02-03T00:00:00-05:00</published><updated>2017-02-03T00:00:00-05:00</updated><id>http://localhost:4000/2017/sometimes-the-best-tutorial-is-no-tutorial</id><content type="html" xml:base="http://localhost:4000/2017/sometimes-the-best-tutorial-is-no-tutorial/">&lt;p&gt;An &lt;em&gt;Office Mayhem&lt;/em&gt; goal of mine for a long time has been to create a world around the office. Not necessarily the buildings and offices around the level, but the office itself. For the longest time, our start and end menus were static. They were pretty to look at, and thematic, but it offered very little value to the players. This week, that finally changed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/blog/2017/02/lolwut.png&quot; alt=&quot;lolwut&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We now have ‘immersive menus’ – basically skeleton levels that players can run around in without the pressure of the tasks or timer. Confetti still falls, and broken computers still fly, and players have really taken to these new rooms, sometimes spending more time there than in the actual game! We’ve done more than just that though. Our number one request from testers has been to be able to copy broken computers, and even though it was usually tongue-in-cheek, it’s something we’ve been wanting to add for a while. Every item that can be picked up in &lt;em&gt;Office Mayhem&lt;/em&gt; now (and in the future) can be copied (and thrown out). That’s a big plus.&lt;/p&gt;

&lt;p&gt;More still, we added our logo to the immersive start screen. Not only that, but we added ‘item functionality’ to the individual letters. That means letters can be picked up, copied, and thrown. Testers have been using this as a form of Scrabble, and it’s pretty funny:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/images/blog/2017/02/hamfam.png&quot; alt=&quot;hamfam&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://andrewmillsapblog.wordpress.com&quot;&gt;Andy&lt;/a&gt; has been hard at work finishing up crunch time and adding a ‘drop-in/drop-out’ feature to the start screen, allowing players to plug and unplug controllers, which is a nice ‘quality of life’ feature. He also implemented location-based menu triggers for the immersive menus, allowing more of our UI and game flow to be diagetic.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://tonyl.info&quot;&gt;Tony&lt;/a&gt; spent this week working on the elevator: a replacement for our current spawning system. Now, instead of items appearing out of thin air, they will now be thrown out of the elevator, like this:&lt;/p&gt;

&lt;figure class=&quot;align-center&quot;&gt;
 &lt;img src=&quot;http://localhost:4000/assets/images/blog/2017/02/elevator.gif&quot; /&gt;
  &lt;figcaption&gt;I don't think there will ever be a need for 50 outboxes, but this gif makes me laugh every time.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;We have a lot on our plate this coming week: finish up the elevator to make it more customizable for the designers, tweak crunch time based on feedback from testers, better the location trigger system and make it more obvious to players what to do, create a framework for handling multiple rounds in a game, and start implementing ‘interruptibles’: a new kind of task. Let’s see how far we can get.&lt;/p&gt;</content><author><name>Tyler Wood</name><email>me@tyskwo.com</email></author><summary type="html">An Office Mayhem goal of mine for a long time has been to create a world around the office. Not necessarily the buildings and offices around the level, but the office itself. For the longest time, our start and end menus were static. They were pretty to look at, and thematic, but it offered very little value to the players. This week, that finally changed.</summary></entry><entry><title type="html">Graduation: T-14 weeks</title><link href="http://localhost:4000/2017/graduation-t-14-weeks/" rel="alternate" type="text/html" title="Graduation: T-14 weeks" /><published>2017-01-26T00:00:00-05:00</published><updated>2017-01-26T00:00:00-05:00</updated><id>http://localhost:4000/2017/graduation-t-14-weeks</id><content type="html" xml:base="http://localhost:4000/2017/graduation-t-14-weeks/">&lt;p&gt;I don’t like that. What’s worse is that number will only go down. I guess that just means I need to make the most of it! This past month was winter break (hence the lack of updates), and I mostly spent it unwinding from the crazy whirlwind of last semester. I did get in contact with a few gaming companies to feel out prospective employments, and I’m excited to see where those lead. I also spent more time refactoring the &lt;em&gt;Office Mayhem&lt;/em&gt; code base, as well as catch &lt;a href=&quot;https://andrewmillsapblog.wordpress.com/&quot;&gt;Andy&lt;/a&gt; and &lt;a href=&quot;https://tonyl.info&quot;&gt;Tony&lt;/a&gt; up to speed. I also began rewriting my website to move away from Wordpress. That isn’t even close to completion, but you can get &lt;a href=&quot;http://tyskwo.github.io/&quot;&gt;a sneak peek here.&lt;/a&gt; I’m using Jekyll, which is a static website generator. Interesting, and definitely more my style as opposed to Wordpress, but I’ve never tried my hand at web development. It’s exciting and different.&lt;/p&gt;

&lt;p&gt;For &lt;em&gt;Office Mayhem,&lt;/em&gt; these first two weeks of classes were to get the ball rolling again. The artists have been sketching concepts and planning out animations, and the design team has been hard at work finalizing the outer game loops, brainstorming items within the office, and creating different task architectures. Andy implemented a feature called ‘crunch time,’ where everything moves faster, tasks are worth more, and there’s even more mayhem at the end of every round. Tony refactored and cleaned up my &lt;code class=&quot;highlighter-rouge&quot;&gt;ProgressBar&lt;/code&gt; code, and he’s starting to implement a rock-solid event system to be used for accolades, sound effect decoupling, and possible environmental hazards. I took this time to finish up some last-minute refactoring, commenting, and general housekeeping, as well as rewriting the &lt;code&gt;MenuManager&lt;/code&gt; class, complete with custom GUI.&lt;/p&gt;

&lt;figure class=&quot;align-center&quot;&gt;
 &lt;img src=&quot;http://localhost:4000/assets/images/blog/2017/01/menumanager.gif&quot; /&gt;
  &lt;figcaption&gt;The custom GUI in action. Automatically finds scene files, and has options for what button needs to be pressed, whether or not all players need to press to trigger it, and whether players can undo their action.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;To create this functionality, there were three problems to overcome. First, be able to find scene files within the project, create a custom GUI for selecting them, and creating an expandable GUI for the &lt;code class=&quot;highlighter-rouge&quot;&gt;MenuManager&lt;/code&gt; itself. The reason for tackling this problem was that before, scenes would have to be manually spelled (possibility of misspellings), the lists were clunky and not visible by default, and the undo/all options were limited to the current scene, thus all transitions has the same values for those parameters – they weren’t on a per-transition basis.&lt;/p&gt;

&lt;p&gt;To tackle the first problem, I needed to be able to search through the project files and find any scene files:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//in class: SceneAssetPathField
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LoadableName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Assets/Scenes/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;.unity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;EndsWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LastIndexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;StartsWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;All I needed was a function that can be called on path names to determine whether the scene was in the scene folder (Assets/Scenes), or ended in .unity (which designates a scene file). If it is, I return the name of the scene. Not very difficult.&lt;/p&gt;

&lt;p&gt;Next, I needed to create a custom GUI for selecting scenes, and I settled on a &lt;code class=&quot;highlighter-rouge&quot;&gt;PropertyDrawer&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//this Unity header designates that this is a property drawer of the above method.
&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;[CustomPropertyDrawer(typeof(SceneAssetPathField))]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SceneAssetPathFieldPropertyDrawer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PropertyDrawer&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//when we are updated
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnGUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Rect&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SerializedProperty&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GUIContent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//get our old path
&lt;/span&gt;        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oldPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AssetDatabase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoadAssetAtPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SceneAsset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stringValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//get our current path, see if it has changed
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;EditorGUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;BeginChangeCheck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newScene&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EditorGUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ObjectField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oldPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SceneAsset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SceneAsset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EditorGUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;EndChangeCheck&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newPath&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AssetDatabase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetAssetPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newScene&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stringValue&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The above class is a &lt;a href=&quot;https://docs.unity3d.com/Manual/editor-PropertyDrawers.html&quot;&gt;custom property drawer.&lt;/a&gt; Nothing too out of the ordinary going on, though do pay attention to the use of &lt;code class=&quot;highlighter-rouge&quot;&gt;var&lt;/code&gt; on lines 9, 13, and 17. This is useful because it allows the type to be inferred at runtime, so I don’t need to know it at compile time (similar to &lt;code class=&quot;highlighter-rouge&quot;&gt;auto&lt;/code&gt; in C++).&lt;/p&gt;

&lt;p&gt;Lastly, I had to create the GUI for the entire system, which uses an internal class to the Unity Editor, the &lt;code class=&quot;highlighter-rouge&quot;&gt;ReorderableList&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;na&quot;&gt;[CustomEditor(typeof(MenuManager))]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MenuManagerEditor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Editor&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
  &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ReorderableList&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnEnable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ReorderableList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serializedObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			           &lt;span class=&quot;n&quot;&gt;serializedObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FindProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;transitions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
			           &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;


	&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drawElementCallback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Rect&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isActive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isFocused&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	    &lt;span class=&quot;c1&quot;&gt;//get the MenuOptions object referenced
&lt;/span&gt;	    &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;serializedProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetArrayElementAtIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	    &lt;span class=&quot;c1&quot;&gt;//somme breathing room!
&lt;/span&gt;	    &lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	    &lt;span class=&quot;c1&quot;&gt;//display the scene picker
&lt;/span&gt;	    &lt;span class=&quot;n&quot;&gt;EditorGUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;PropertyField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EditorGUIUtility&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;singleLineHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FindPropertyRelative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;scene&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;GUIContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	    &lt;span class=&quot;c1&quot;&gt;//draw the rest of the elements here...
&lt;/span&gt;	&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//when the GUI is updated
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;OnInspectorGUI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//update the object we are attached to
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;serializedObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//draw the list
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;DoLayoutList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//apple any modified properties
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;serializedObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ApplyModifiedProperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Tyler Wood</name><email>me@tyskwo.com</email></author><summary type="html">I don’t like that. What’s worse is that number will only go down. I guess that just means I need to make the most of it! This past month was winter break (hence the lack of updates), and I mostly spent it unwinding from the crazy whirlwind of last semester. I did get in contact with a few gaming companies to feel out prospective employments, and I’m excited to see where those lead. I also spent more time refactoring the Office Mayhem code base, as well as catch Andy and Tony up to speed. I also began rewriting my website to move away from Wordpress. That isn’t even close to completion, but you can get a sneak peek here. I’m using Jekyll, which is a static website generator. Interesting, and definitely more my style as opposed to Wordpress, but I’ve never tried my hand at web development. It’s exciting and different.</summary></entry><entry><title type="html">Empire: Influence Maps are Slow.</title><link href="http://localhost:4000/2016/empire-influence-maps-are-slow/" rel="alternate" type="text/html" title="Empire: Influence Maps are Slow." /><published>2016-12-16T00:00:00-05:00</published><updated>2016-12-16T00:00:00-05:00</updated><id>http://localhost:4000/2016/empire-influence-maps-are-slow</id><content type="html" xml:base="http://localhost:4000/2016/empire-influence-maps-are-slow/">&lt;p&gt;Or maybe I just wasn’t implementing them right. With a map size of 40x40, or 1600 tiles, keeping references to multiple influence maps wasn’t too bad, but calculating them was grinding. Regardless, I had to scrap the idea of storing multiple maps and having a blend-weight algorithm for truly diverse interactions and behaviors. With that in mind, I refactored the behavior I wanted my influence maps to exhibit into three key points: find and conquer neutral cities as fast as possible, find and attack enemy cities when they are most weakly-defended, and avoid conflict when possible to keep as many units alive.&lt;/p&gt;

&lt;p&gt;Towards point one, this was easily achieved by keeping track of what neutral cities we’ve tried to conquer but haven’t done so. I would then find the closest unit to each neutral city to go for another conquer. Rinse and repeat until they’re conquered. For point two, this is a similar procedure as to point one, with the addition of finding how many enemies are within a certain radius of the city (for the competition, I used 2 enemies in a 2-wide radius, but this was not tested thoroughly). When the number of enemies fell below the threshold, the closest army was found and would make a bee-line for the city. Point number three was easiest of all (if also incomplete): my armies would never start a conflict; the anti-thesis to Wayne Gretzky’s quote, “You miss 100% of the shots you don’t take” – “You win 100% of the conflicts you don’t start.”&lt;/p&gt;

&lt;p&gt;I would calculate refreshes of this data every five turns. Honestly, I believe this was my largest weakness during the competition: at times I was 5 turns behind the current board’s info. The number-crunching itself wasn’t too intensive – there wasn’t any visible delay – and this 5 turn refresh was a hold-over from when I was implementing the influence maps.&lt;/p&gt;

&lt;p&gt;Overall, my AI performed diligently. There were a few instances where storms occurred at inopportune times, but outside of the monsoon season, my AI was arguably among the most efficient.&lt;/p&gt;</content><author><name>Tyler Wood</name><email>me@tyskwo.com</email></author><summary type="html">Or maybe I just wasn’t implementing them right. With a map size of 40x40, or 1600 tiles, keeping references to multiple influence maps wasn’t too bad, but calculating them was grinding. Regardless, I had to scrap the idea of storing multiple maps and having a blend-weight algorithm for truly diverse interactions and behaviors. With that in mind, I refactored the behavior I wanted my influence maps to exhibit into three key points: find and conquer neutral cities as fast as possible, find and attack enemy cities when they are most weakly-defended, and avoid conflict when possible to keep as many units alive.</summary></entry><entry><title type="html">Office Mayhem: The Midpoint Check-In</title><link href="http://localhost:4000/2016/office-mayhem-the-midpoint-check-in/" rel="alternate" type="text/html" title="Office Mayhem: The Midpoint Check-In" /><published>2016-12-15T00:00:00-05:00</published><updated>2016-12-15T00:00:00-05:00</updated><id>http://localhost:4000/2016/office-mayhem-the-midpoint-check-in</id><content type="html" xml:base="http://localhost:4000/2016/office-mayhem-the-midpoint-check-in/">&lt;p&gt;This post has been brewing in my head for a while, speaking for the lack of content I’ve posted lately. My thoughts are still scattered, but I believe I’m at a point where I can at least partially articulate my takeaways from the apogee of my college experience thus far.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Office Mayhem&lt;/em&gt; began last semester when our team was formed: I’ve been roommates with &lt;a href=&quot;https://jeremyroot.squarespace.com/blog/&quot;&gt;Jeremy&lt;/a&gt; since freshman year (and ironically this was our first time working together, although we’ve been yearning to for a while), lived in the same dorm and good friends with &lt;a href=&quot;https://www.willconcannonart.com&quot;&gt;Will&lt;/a&gt; since freshman year, and worked with &lt;a href=&quot;http://richardkingcapstone.blogspot.com/&quot;&gt;Richard&lt;/a&gt; last semester in Production II. With the ball formed, we waited a while before rolling it: we heard other teams jumping right out of the gate, spending the summer creating prototypes and frameworks; we relaxed and spent our last summer break in our own lives. We virtually met the final week of summer break, spit-balling ideas left, right, and center, and that’s where &lt;em&gt;Office Mayhem&lt;/em&gt; was born. Looking back, I think our lax nature towards working over the summer indirectly allowed us to start the semester with a larger gusto, as we were fresh with concepts and an undying willingness to work. Our work ethic those first few weeks were critical in not only setting our pace for the rest of the semester, but also allowing us to quickly create a prototype and iterate on our concept. Throughout the semester, although &lt;em&gt;Office Mayhem&lt;/em&gt; was our baby, we were constantly in search of feedback and critiques, and continuously refactoring our concept because of it. This combined with our short sprint cycles allowed us to nimbly snake through the forest of possible ideas. That was a horrible metaphor, but we are proud of our ability to adapt to feedback to ‘find the fun.’&lt;/p&gt;

&lt;figure class=&quot;align-center&quot; style=&quot;width: 640&quot;&gt;
 &lt;img src=&quot;http://localhost:4000/assets/images/blog/2016/12/stolen.gif&quot; /&gt;
  &lt;figcaption&gt;Interactions like this are common. Frustration and giddy excitement.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;From a team dynamic standpoint, I could not be more proud of how we functioned this past semester. Our weakest point was timeframe of communication, but that is trying to find a dent in a bowling ball. Acting as producer, I feel I ran a fair but tight ship: we had hard deadlines, but we never had crunch, which I’m immensely prideful of. We stayed on the schedule we set, and we had healthy communication and meetings throughout the entire semester. Our backend was clean, organized, and I believe intuitive. I tried to streamline the process as much as I could, and I’m pleased to say we already have a better system in place next semester. Better yet, this system theoretically fixes our communication timeliness issues. I’m really looking forward to it.&lt;/p&gt;

&lt;figure class=&quot;align-center&quot;&gt;
 &amp;lt;a href=&quot;http://localhost:4000/assets/images/blog/2016/12/om_logo_hd.png&quot;&lt;img src=&quot;http://localhost:4000/assets/images/blog/2016/12/om_logo_hd.png&quot; /&gt;&amp;lt;/a&amp;gt;
  &lt;figcaption&gt;Here's our word mark, in HD quality. It works great as a wallpaper!&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;From the get-go, I’ve approached &lt;em&gt;Office Mayhem&lt;/em&gt; as a marketing brand: one of the first tasks I gave Will was to create a word mark to begin our marketing push. With that we created stickers, a consistent internal document template, a professional presentation theme, and put in the motion for custom shirts for our final pitch. We created renders for posters/presentation backgrounds, gifs for blog posts, and as soon as we were told we were moving through, we created a &lt;a href=&quot;https://twitter.com/officemayhem&quot;&gt;Twitter handle (not much there yet, but follow us! We’ll be posting updates super frequently!)&lt;/a&gt; and secured an email domain. Next up, obviously, is a website, but that will come later this semester. Although I’m very obviously not a marketing aficionado, I felt I was lucky with the steps we took and when we took them. From the beginning of the semester, we had a very consistent image that allowed our game to be very memorable, very quickly – from QA testing to class presentations. Our trailer is the epitome of this branding effort, and I feel really sums up the emotions and nature of the game. (Fun fact, &lt;em&gt;Dance of the Hours&lt;/em&gt; was used in the &lt;a href=&quot;https://www.youtube.com/watch?v=Z8OWIjBUcBU&quot;&gt;new &lt;em&gt;Celebrity Apprentice&lt;/em&gt; commercial!&lt;/a&gt;)&lt;/p&gt;

&lt;!-- Courtesy of embedresponsively.com //--&gt;
&lt;div class=&quot;responsive-video-container&quot;&gt;

  &lt;iframe src=&quot;https://www.youtube.com/embed/vAcvIKauDjU&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;/div&gt;

&lt;p&gt;Now, obviously I wore a lot of hats this semester, but the most important is obviously the programmer – how exactly did that pan out? There are some portions of the codebase that need to be refactored, but overall I can’t help but feel proud of the architecture of it. There’s nothing specific about it that is groundbreaking or innovative, but I feel it’s some of the cleanest, decoupled code I have written. I am excited to add this project to my portfolio upon completion. I’ve also spent this last week cleaning up the codebase, commenting as much code as I can, and creating an extensive &lt;a href=&quot;https://github.com/tyskwo/OfficeMayhem/wiki&quot;&gt;GitHub wiki&lt;/a&gt; for on boarding the new programmers: [Tony(https://coffeestainedcode.wordpress.com) and &lt;a href=&quot;https://andrewmillsaplichkingproductions.wordpress.com&quot;&gt;Andy&lt;/a&gt;. Although not necessary for the class, I felt this was necessary to catch them up to speed as quick as possible, as well as keeping the three of us on the same page using issues. I will be spending most of winter break refactoring the necessary portions of the codebase while Tony and Andy get used to it, so that we can start next semester with the same pace we had this semester.&lt;/p&gt;

&lt;p&gt;Everything I’ve done this semester has been with respect to making the process as simple as possible for my teammates. This, in turn, has a singular purpose: to make as good of a game as we can. I guess in a sense that’s the programmer’s mindset: make things as simple as possible. With that said, I’m excited to have &lt;a href=&quot;https://benjaminlander.wordpress.com&quot;&gt;Ben&lt;/a&gt; as our producer next semester. I’m sure I’ll retain at least some control, but he’s already streamlined our process even more, which will hopefully allow the team to focus on the game. I could not be more excited to see where &lt;em&gt;Office Mayhem&lt;/em&gt; goes this coming semester, and I am chomping at the bit to work on it more. I could not be more proud of my team and the game, and I truly believe this is the epitome of my college experience.&lt;/p&gt;

&lt;figure class=&quot;align-center&quot;&gt;
 &lt;img src=&quot;http://localhost:4000/assets/images/blog/2016/12/inthezone.gif&quot; /&gt;
  &lt;figcaption&gt;This is exactly what I hope to do next semester.&lt;/figcaption&gt;
&lt;/figure&gt;</content><author><name>Tyler Wood</name><email>me@tyskwo.com</email></author><summary type="html">This post has been brewing in my head for a while, speaking for the lack of content I’ve posted lately. My thoughts are still scattered, but I believe I’m at a point where I can at least partially articulate my takeaways from the apogee of my college experience thus far.</summary></entry><entry><title type="html">Empire: Time to Conquer</title><link href="http://localhost:4000/2016/empire-time-to-conquer/" rel="alternate" type="text/html" title="Empire: Time to Conquer" /><published>2016-12-02T00:00:00-05:00</published><updated>2016-12-02T00:00:00-05:00</updated><id>http://localhost:4000/2016/empire-time-to-conquer</id><content type="html" xml:base="http://localhost:4000/2016/empire-time-to-conquer/">&lt;p&gt;The land has been surveyed, cities found, and enemies identified. It is now time to claim reign of the land and declare victory! Defeating enemies, taking control of cities, and building the largest army are now all valid goals. Building off the last post of exploration, it’s now time to create a plan of attack to, well, attack.&lt;/p&gt;

&lt;figure class=&quot;align-center&quot; style=&quot;width: 300&quot;&gt;
 &lt;img src=&quot;http://localhost:4000/assets/images/blog/2016/12/empire.png&quot; /&gt;
  &lt;figcaption&gt;I opened up the entire map here, but in-game there is per-player fog of war. This still allows my exploration AI from last time to be relevant and stay in production.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;http://www.redblobgames.com/x/1510-influence-maps/&quot;&gt;Influence maps&lt;/a&gt; are a form of world mapping to give information to AI opponents. They are similar to &lt;a href=&quot;http://aigamedev.com/open/article/static-blackboard/&quot;&gt;blackboards&lt;/a&gt;, but give a more structured view of the world. Generally, blackboards are a shared resource among individual units, each with their own brain, whereas influence maps are more of a top-down approach, all of the units follow the influence map’s reasoning. Also, influence maps can be weighted and blended: for instance, if we have maps for enemy density, city density, and ally density, we can combine these to have a master influence map. The efficiency of influence maps lie within the algorithm and reasoning for creating values at each tile, but having only one algorithm per map is much easier to manage than a single, larger complicated algorithm per unit for the blackboard. With Empire being tile-based, influence maps are &lt;a href=&quot;http://aigamedev.com/open/tutorial/influence-map-mechanics/&quot;&gt;a breeze to implement.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What’s important to remember is that influence maps are relatively cheap, so long as their algorithms for determining the value of each tile are as well. Keeping this in mind, we could implement different influence map sets for different types of units: scouts can focus on unexplored land, whereas armies can focus on taking over neutral cities, and patrolmen can focus on defending their cities from enemies. This would easily allow for creation of new categories of units so long we can conceptualize an appropriate map for it. Influence maps are easy to implement will maintaining an extremely high level of customization. They aren’t always the best choice, but with a tile- and turn-based strategy game like &lt;em&gt;Empire&lt;/em&gt;, it’s almost a no brainer.&lt;/p&gt;

&lt;figure class=&quot;align-center&quot;&gt;
 &lt;img src=&quot;http://localhost:4000/assets/images/blog/2016/12/influencemap.png&quot; /&gt;
  &lt;figcaption&gt;Here's a visual representation of an influence map, based on player control of a space.&lt;/figcaption&gt;
&lt;/figure&gt;</content><author><name>Tyler Wood</name><email>me@tyskwo.com</email></author><summary type="html">The land has been surveyed, cities found, and enemies identified. It is now time to claim reign of the land and declare victory! Defeating enemies, taking control of cities, and building the largest army are now all valid goals. Building off the last post of exploration, it’s now time to create a plan of attack to, well, attack.</summary></entry><entry><title type="html">Did we move forward?</title><link href="http://localhost:4000/2016/did-we-move-forward/" rel="alternate" type="text/html" title="Did we move forward?" /><published>2016-11-22T00:00:00-05:00</published><updated>2016-11-22T00:00:00-05:00</updated><id>http://localhost:4000/2016/did-we-move-forward</id><content type="html" xml:base="http://localhost:4000/2016/did-we-move-forward/">&lt;p&gt;It is Tuesday morning, 10:31 AM. We presented &lt;em&gt;Office Mayhem&lt;/em&gt; to the faculty and game studio community last night, and tonight we demo the game. After that, the faculty decide who moves forward. With that said, this post is going to be in two parts: a ‘before-final-decision,’ and ‘after-final-decision.’&lt;/p&gt;

&lt;p&gt;This past week has been primarily focused on readying our presentation and some final bug fixes. I am really proud of the team for not having any crunch time this semester. That speaks more to their work ethic, our team dynamic, and communication skills than my leadership. In an industry riddled with it, I’m happy we weren’t too stressed out at any particular time. Our presentation went well: or so people have told us. I think I held the microphone too low and was a little quiet, but the content was there. We butted right up to the 10 minute limit at 9:45, but we had some good audience interaction throughout. I am pessimistically optimistic.&lt;/p&gt;

&lt;p&gt;Tonight is going to be exciting though. We stand behind our build, and I truly believe it is one of the most polished and complete. Regardless of that, it really boils down to if the faculty understand and enjoy &lt;em&gt;Office Mayhem&lt;/em&gt;, and I hope that the tutorial eases any remaining friction we have. It is out of our hands now.&lt;/p&gt;

&lt;p&gt;Here’s the trailer I mentioned in my last post: we think it perfectly sums up the nature of the game – fun and light-hearted – and a huge thank you to &lt;a href=&quot;https://www.linkedin.com/in/kathrynleahbullock&quot;&gt;Katie Bullock&lt;/a&gt; for creating it:&lt;/p&gt;

&lt;!-- Courtesy of embedresponsively.com //--&gt;
&lt;div class=&quot;responsive-video-container&quot;&gt;

  &lt;iframe src=&quot;https://www.youtube.com/embed/vAcvIKauDjU&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;It is now 7:52 PM, and we have presented our game at demo night. As far as I could tell, we had really positive feedback from the professors that played: people were laughing, cussing at each other, and causing mayhem throughout the office. With that, now begins the long, slow wait to see if it was all enough. Minutes can not feel any longer.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;We made it. I can not overstate the pride I have in my team and the work they have done.&lt;/p&gt;</content><author><name>Tyler Wood</name><email>me@tyskwo.com</email></author><summary type="html">It is Tuesday morning, 10:31 AM. We presented Office Mayhem to the faculty and game studio community last night, and tonight we demo the game. After that, the faculty decide who moves forward. With that said, this post is going to be in two parts: a ‘before-final-decision,’ and ‘after-final-decision.’</summary></entry><entry><title type="html">One Final Push.</title><link href="http://localhost:4000/2016/one-final-push/" rel="alternate" type="text/html" title="One Final Push." /><published>2016-11-17T00:00:00-05:00</published><updated>2016-11-17T00:00:00-05:00</updated><id>http://localhost:4000/2016/one-final-push</id><content type="html" xml:base="http://localhost:4000/2016/one-final-push/">&lt;p&gt;We have successfully challenged vertical slice, and I believe we are one of two teams to do so: this is quite the accomplishment. With that, we are allowed to present Monday to put forth our case for letting our project continue next semester. Thus begins the last push. With four days left, I feel relaxed. Not safe – I really don’t know what the faculty will think of &lt;em&gt;Office Mayhem&lt;/em&gt; - but I’m not stressed. The team has structured its schedule really well, and what’s left is more-or-less the presentation itself and some small polishes with UI and controls. Most of our feedback for our last presentation was about concepts to add – which basically boiled down to more mayhem, and interplay between the systems – not about the prototype in its current state, which is really uplifting. Our peers are more focused on what we will add to the game, which at some level shows they want the game to go through, or at least expect it to. I’m not superstitious, but I also don’t want to jinx anything.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://tyskwo.com/2016/11/03/3-2-1/&quot;&gt;The last time I showed you &lt;em&gt;Office Mayhem&lt;/em&gt;,&lt;/a&gt; we had the core game loop completed, and were focusing on fun. On that front, I think we’ve made tremendous progress over the past two weeks. Since then, we’ve removed as much player friction as we could: the controls have been tightened, the item detection system was rewritten, sounds have been refined (and more added), and dashing and throwing have been tweaked in accordance with feedback from QA. Most importantly, we have completely reworked the UI: it is now more out-of-the-way without losing information, while being more concise for players. In addition to the friction removal, we’ve rewritten the score screen to be more coherent and grounded within the office environment, added the background soundtrack written by &lt;a href=&quot;http://richardkingcapstone.blogspot.com&quot;&gt;Richard&lt;/a&gt;, balanced the point system to try to balance strategies we’ve observed at QA, and created a new menu traversal system to prevent player abuse. The largest addition, though, is a tutorial that is individual to each player, allowing them to learn the game at their own pace. Jeremy did a great job with it, as it only includes enough to become comfortable with the controls and learn how to play the game, while allowing the player to still explore and discover little nuances of the game (like throwing items out, or copying outboxes).&lt;/p&gt;

&lt;figure class=&quot;align-center&quot;&gt;
 &lt;img src=&quot;http://localhost:4000/assets/images/blog/2016/11/stress_test.png&quot; /&gt;
  &lt;figcaption&gt;We're good testers! Stress testing the item creation systems, as well as profiling performance. This was still running at 60FPS. And yes, purple player is somewhere in that sea of trashcans.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;For Monday, we have our plate full: we want this presentation to be as stellar as it can be. &lt;a href=&quot;https://www.linkedin.com/in/kathrynleahbullock&quot;&gt;Katie&lt;/a&gt; is working on the trailer, and it is shaping up to be great. We need to decide what and how we want to present, but I’m excited. We have some small surprises planned; we’ll see how they go. After the presentation, the faculty demo our games Tuesday, and we find out who goes through that night. I’ll be quiet until then. For now, here’s the current state of the slice; we’re pretty proud of it:&lt;/p&gt;

&lt;!-- Courtesy of embedresponsively.com //--&gt;
&lt;div class=&quot;responsive-video-container&quot;&gt;

  &lt;iframe src=&quot;https://www.youtube.com/embed/spb2KO982HA&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;/div&gt;</content><author><name>Tyler Wood</name><email>me@tyskwo.com</email></author><summary type="html">We have successfully challenged vertical slice, and I believe we are one of two teams to do so: this is quite the accomplishment. With that, we are allowed to present Monday to put forth our case for letting our project continue next semester. Thus begins the last push. With four days left, I feel relaxed. Not safe – I really don’t know what the faculty will think of Office Mayhem - but I’m not stressed. The team has structured its schedule really well, and what’s left is more-or-less the presentation itself and some small polishes with UI and controls. Most of our feedback for our last presentation was about concepts to add – which basically boiled down to more mayhem, and interplay between the systems – not about the prototype in its current state, which is really uplifting. Our peers are more focused on what we will add to the game, which at some level shows they want the game to go through, or at least expect it to. I’m not superstitious, but I also don’t want to jinx anything.</summary></entry><entry><title type="html">A Little Bit of Relaxation</title><link href="http://localhost:4000/2016/a-little-bit-of-relaxation/" rel="alternate" type="text/html" title="A Little Bit of Relaxation" /><published>2016-11-09T00:00:00-05:00</published><updated>2016-11-09T00:00:00-05:00</updated><id>http://localhost:4000/2016/a-little-bit-of-relaxation</id><content type="html" xml:base="http://localhost:4000/2016/a-little-bit-of-relaxation/">&lt;p&gt;13 days left. I’ve taken a breather over the last two days. This past week of QA has been controls- and player feedback-centric, and we’ve been focusing on the core gameplay experience as opposed to adding more features to the build. &lt;em&gt;Office Mayhem&lt;/em&gt; has reached its saturation point: without a tutorial or progression, any more features added to the build would overwhelm new players and negatively affect their experience. When the faculty try &lt;em&gt;Office Mayhem&lt;/em&gt;, many of them will be playing for the first time. As such, if we include new features into the build, our gameplay might feel cluttered and hard to understand. Because of this, we have a short list to implement for the rest of the semester: finish music, remake the item icons and task card UI, add more environment art to make the level seem more grounded, and add a tutorial. The first four of that list are polish, game-feel related tasks whereas the last, and arguably the largest, is to help the faculty understand how to play the game before we throw them into the mayhem. &lt;a href=&quot;http://jeremyroot.squarespace.com&quot;&gt;Jeremy&lt;/a&gt; has spent the last couple of days reworking the icons and building the tutorial level, and now him and I need to decide on the format for introducing the mechanics.&lt;/p&gt;

&lt;p&gt;The past couple of days on my end has been more marketing- and backend-focused. I took some time to clean up Pineapple, organize our drive, and start the technical wiki on &lt;a href=&quot;https://github.com/tyskwo/OfficeMayhem/wiki&quot;&gt;GitHub&lt;/a&gt; to better document the codebase. I also spent some time working on the logo for our team; we’re &lt;em&gt;9:5 Games&lt;/em&gt; and wanted a logo for our final presentation. With my love for graphic design, I decided to take on the challenge, and the team is happy with the result.&lt;/p&gt;

&lt;figure class=&quot;align-center&quot;&gt;
  &lt;a href=&quot;http://localhost:4000/assets/images/blog/2016/11/9-5games.png&quot;&gt;&lt;img src=&quot;http://localhost:4000/assets/images/blog/2016/11/9-5games.png&quot; /&gt;&lt;/a&gt;
  &lt;figcaption&gt;For those confused by the logo, the three bars are in the ratio of 9:2:5, 'nine to five.' Click to enlarge.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Along with the logo and ‘November cleaning,’ I’ve been hard at work capturing game footage with Jeremy, and I’ve been converting this footage to gifs for our blog posts, Twitter, etc. Speaking of which, feel free to &lt;a href=&quot;https://twitter.com/tyskwo&quot;&gt;follow me&lt;/a&gt;, I’ve been tweeting more lately. Through these gifs, we are trying to create snippets of gameplay that show our vision of over-the-top fun that testers have when they play &lt;em&gt;Office Mayhem.&lt;/em&gt; So far I feel that we’ve been successful, but there are still some scenarios we want to convey, we’ll probably record more footage later this week.&lt;/p&gt;

&lt;p&gt;I’ve done more than just marketing mumbo jumbo though, I’ve rewritten the item detection system, as well as refactored much of the character movement system, addressing the main feedback we’ve been getting about tightening up the controls. Next up is implementing the UI changes Jeremy is making, and adding the tutorial. More importantly, that tutorial needs to be well-tested and statistically helpful in order for its impact to be felt when the faculty try out our game. Fingers crossed, the finish line is within sight.&lt;/p&gt;

&lt;figure class=&quot;align-center&quot;&gt;
  &lt;img src=&quot;http://localhost:4000/assets/images/blog/2016/11/catmouse.gif&quot; /&gt;
  &lt;figcaption&gt;The office chairs act as good buffers when playing cat and mouse.&lt;/figcaption&gt;
&lt;/figure&gt;</content><author><name>Tyler Wood</name><email>me@tyskwo.com</email></author><summary type="html">13 days left. I’ve taken a breather over the last two days. This past week of QA has been controls- and player feedback-centric, and we’ve been focusing on the core gameplay experience as opposed to adding more features to the build. Office Mayhem has reached its saturation point: without a tutorial or progression, any more features added to the build would overwhelm new players and negatively affect their experience. When the faculty try Office Mayhem, many of them will be playing for the first time. As such, if we include new features into the build, our gameplay might feel cluttered and hard to understand. Because of this, we have a short list to implement for the rest of the semester: finish music, remake the item icons and task card UI, add more environment art to make the level seem more grounded, and add a tutorial. The first four of that list are polish, game-feel related tasks whereas the last, and arguably the largest, is to help the faculty understand how to play the game before we throw them into the mayhem. Jeremy has spent the last couple of days reworking the icons and building the tutorial level, and now him and I need to decide on the format for introducing the mechanics.</summary></entry><entry><title type="html">Empire: The Need to Explore</title><link href="http://localhost:4000/2016/empire-the-need-to-explore-the-world/" rel="alternate" type="text/html" title="Empire: The Need to Explore" /><published>2016-11-06T00:00:00-04:00</published><updated>2016-11-06T00:00:00-04:00</updated><id>http://localhost:4000/2016/empire-the-need-to-explore-the-world</id><content type="html" xml:base="http://localhost:4000/2016/empire-the-need-to-explore-the-world/">&lt;p&gt;&lt;em&gt;Empire:&lt;/em&gt; the final project for AI this semester, and a game that gave birth to the likes of &lt;em&gt;Civilization&lt;/em&gt; and &lt;em&gt;Age of Empires&lt;/em&gt;. Because this game is more complex than &lt;em&gt;Minesweeper&lt;/em&gt; and &lt;em&gt;Rummy&lt;/em&gt;, the class is going to tackle the project in stages, the first of which is exploring as much of the map as possible in a set amount of turns.&lt;/p&gt;

&lt;figure class=&quot;align-left&quot; style=&quot;width: 125px&quot;&gt;
  &lt;img src=&quot;http://localhost:4000/assets/images/blog/2016/11/exploration_reasoning.png&quot; /&gt;
  &lt;figcaption&gt;The light green tiles are the ones that would be revealed when the red unit moves.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;Empire&lt;/em&gt; consists of cities and units. Cities are baked into the map, are either owned by a player or neutral, and when attacked, can switch hands between players. They produce units, and the rate is determined by what type of unit. Unit types are armies, which are your basic one health, one movement type (they are also the only land-based units), cruisers, which can move the farthest in water, destroyers, which have a ton of firing power, and battleships, which are the kings of the sea.&lt;/p&gt;

&lt;p&gt;Although armies are the only land-based unity, they can also travel over water (I imagine them piling into a little canoe). Every turn, there is a small chance of a storm occurring, which would wipe out the armies that are at sea. Thus, there is an inherent risk to sending armies to explore the sea with no coherent point to move towards.&lt;/p&gt;

&lt;figure class=&quot;align-left&quot; style=&quot;width: 300px&quot;&gt;
  &lt;img src=&quot;http://localhost:4000/assets/images/blog/2016/11/explanation.png&quot; /&gt;
  &lt;figcaption&gt;These lines represent the exploration of every tile, using only 20 units over 45 turns (assuming we only produce armies).&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Regardless, from a pure exploration standpoint with no repercussions of enemies or having lone scouts, there’s a smart way to look at this problem from a pure statistical lens. When moving in the four cardinal directions, units only expose three new tiles, whereas moving along the diagonals reveal five new tiles. Thus, my goal for this exploration challenge is to move all of my units on diagonals. I’ll find the percentage of water:land tiles neighboring my starting city, and figure out how often I need to create a water-based unit. I will then have an offset to push them in parallel diagonals. Doing this in all four diagonals, weighting the one towards the center of the map, will statistically allow me to explore the largest amount of tiles. Areas of refinement include finding the right ratio of armies to water-based units and how best to deal with armies being lost at sea. That’s my plan of attack, and it doesn’t make much sense from a gameplay point-of-view, but for this assignment I believe it’s the optimal strategy.&lt;/p&gt;</content><author><name>Tyler Wood</name><email>me@tyskwo.com</email></author><summary type="html">Empire: the final project for AI this semester, and a game that gave birth to the likes of Civilization and Age of Empires. Because this game is more complex than Minesweeper and Rummy, the class is going to tackle the project in stages, the first of which is exploring as much of the map as possible in a set amount of turns.</summary></entry></feed>
